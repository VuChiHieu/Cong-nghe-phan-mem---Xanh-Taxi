from django.shortcuts import render, get_object_or_404, redirect
from django.core.exceptions import ValidationError
from app_admin.models import Trip, Driver, Student
from .forms import TripForm
from django.contrib import messages

def trip(request):
    trips = Trip.objects.all()
    return render(request, 'app_home/Trip/trip.html', {'trips': trips})

def add_trip(request):
    drivers = Driver.objects.all()  # L·∫•y danh s√°ch t√†i x·∫ø
    students = Student.objects.all()  # L·∫•y danh s√°ch h·ªçc sinh

    if request.method == 'POST':
        form = TripForm(request.POST)
        messages.success(request, "üß≥ M·ªõi c√≥ 1 chuy·∫øn ƒëi m·ªõi!")
        if form.is_valid():
            trip = form.save(commit=False)  # T·∫°o ƒë·ªëi t∆∞·ª£ng Trip nh∆∞ng ch∆∞a l∆∞u
            selected_students = form.cleaned_data.get('students')  # L·∫•y danh s√°ch h·ªçc sinh t·ª´ form
            
            # T√≠nh gi√° ti·ªÅn d·ª±a tr√™n kho·∫£ng c√°ch
            trip.price = trip.distance * 10000  

            # Ki·ªÉm tra gi√° ti·ªÅn kh√¥ng ƒë∆∞·ª£c nh·ªè h∆°n 0
            if trip.price < 0:
                form.add_error('price', 'Gi√° ti·ªÅn kh√¥ng th·ªÉ nh·ªè h∆°n 0.')
            # Ki·ªÉm tra th·ªùi gian k·∫øt th√∫c h·ª£p l·ªá
            elif trip.end_time and trip.start_time and trip.end_time <= trip.start_time:
                form.add_error('end_time', 'Th·ªùi gian k·∫øt th√∫c ph·∫£i l·ªõn h∆°n th·ªùi gian b·∫Øt ƒë·∫ßu.')
            else:
                trip.save()  # L∆∞u ƒë·ªëi t∆∞·ª£ng Trip n·∫øu kh√¥ng c√≥ l·ªói
                form.save_m2m()  # L∆∞u quan h·ªá Many-to-Many v·ªõi h·ªçc sinh
                return redirect('trip')

    else:
        form = TripForm()

    return render(request, 'app_home/Trip/add_trip.html', {
        'form': form,
        'drivers': drivers,
        'students': students,
    })

def edit_trip(request, id):
    trip = get_object_or_404(Trip, id=id)
    drivers = Driver.objects.all()
    students = Student.objects.all()

    if request.method == 'POST':
        form = TripForm(request.POST, instance=trip)
        messages.success(request, "üöå M·ªõi c√≥ 1 chuy·∫øn ƒëi m·ªõi!")
        if form.is_valid():
            updated_trip = form.save(commit=False)

            # C·∫≠p nh·∫≠t th√¥ng tin nh∆∞ng gi·ªØ l·∫°i gi√° tr·ªã c≈© n·∫øu kh√¥ng c√≥ thay ƒë·ªïi
            trip.start_location = request.POST.get('start_location', trip.start_location)
            trip.end_location = request.POST.get('end_location', trip.end_location)
            trip.start_time = request.POST.get('start_time', trip.start_time)
            trip.end_time = request.POST.get('end_time', trip.end_time)
            trip.status = request.POST.get('status', trip.status)

            # T√≠nh l·∫°i gi√° ti·ªÅn d·ª±a tr√™n kho·∫£ng c√°ch
            trip.price = trip.distance * 10000  

            # Ki·ªÉm tra ƒëi·ªÅu ki·ªán h·ª£p l·ªá tr∆∞·ªõc khi l∆∞u
            if trip.price < 0:
                form.add_error('price', 'Gi√° ti·ªÅn kh√¥ng th·ªÉ nh·ªè h∆°n 0.')
            elif trip.end_time and trip.start_time and trip.end_time <= trip.start_time:
                form.add_error('end_time', 'Th·ªùi gian k·∫øt th√∫c ph·∫£i l·ªõn h∆°n th·ªùi gian b·∫Øt ƒë·∫ßu.')
            else:
                trip.save()
                form.save_m2m()
                return redirect('trip')

    else:
        form = TripForm(instance=trip)

    return render(request, 'app_home/Trip/edit_trip.html', {
        'form': form,
        'drivers': drivers,
        'students': students,
    })
    
# X√≥a chuy·∫øn ƒëi
def delete_trip(request, id):
    trip = get_object_or_404(Trip, id=id)
    if request.method == 'POST':
        trip.delete()
        return redirect('trip')

    return render(request, 'app_home/Trip/delete_trip.html', {
        'trip': trip,
    })